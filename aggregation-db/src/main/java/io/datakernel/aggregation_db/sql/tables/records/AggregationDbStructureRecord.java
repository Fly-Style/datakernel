/**
 * This class is generated by jOOQ
 */
package io.datakernel.aggregation_db.sql.tables.records;


import io.datakernel.aggregation_db.sql.tables.AggregationDbStructure;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggregationDbStructureRecord extends UpdatableRecordImpl<AggregationDbStructureRecord> implements Record5<String, String, String, String, String> {

	private static final long serialVersionUID = -1398192080;

	/**
	 * Setter for <code>aggregation_db_structure.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>aggregation_db_structure.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>aggregation_db_structure.keys</code>.
	 */
	public void setKeys(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>aggregation_db_structure.keys</code>.
	 */
	public String getKeys() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>aggregation_db_structure.inputFields</code>.
	 */
	public void setInputfields(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>aggregation_db_structure.inputFields</code>.
	 */
	public String getInputfields() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>aggregation_db_structure.outputFields</code>.
	 */
	public void setOutputfields(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>aggregation_db_structure.outputFields</code>.
	 */
	public String getOutputfields() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>aggregation_db_structure.predicates</code>.
	 */
	public void setPredicates(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>aggregation_db_structure.predicates</code>.
	 */
	public String getPredicates() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return AggregationDbStructure.AGGREGATION_DB_STRUCTURE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AggregationDbStructure.AGGREGATION_DB_STRUCTURE.KEYS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AggregationDbStructure.AGGREGATION_DB_STRUCTURE.INPUTFIELDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AggregationDbStructure.AGGREGATION_DB_STRUCTURE.OUTPUTFIELDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return AggregationDbStructure.AGGREGATION_DB_STRUCTURE.PREDICATES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getKeys();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getInputfields();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getOutputfields();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPredicates();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord value2(String value) {
		setKeys(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord value3(String value) {
		setInputfields(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord value4(String value) {
		setOutputfields(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord value5(String value) {
		setPredicates(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbStructureRecord values(String value1, String value2, String value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AggregationDbStructureRecord
	 */
	public AggregationDbStructureRecord() {
		super(AggregationDbStructure.AGGREGATION_DB_STRUCTURE);
	}

	/**
	 * Create a detached, initialised AggregationDbStructureRecord
	 */
	public AggregationDbStructureRecord(String id, String keys, String inputfields, String outputfields, String predicates) {
		super(AggregationDbStructure.AGGREGATION_DB_STRUCTURE);

		setValue(0, id);
		setValue(1, keys);
		setValue(2, inputfields);
		setValue(3, outputfields);
		setValue(4, predicates);
	}
}
