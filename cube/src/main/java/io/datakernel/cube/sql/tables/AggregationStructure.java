/*
 * Copyright (C) 2015 SoftIndex LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This class is generated by jOOQ
 */
package io.datakernel.cube.sql.tables;

import io.datakernel.cube.sql.DefaultSchema;
import io.datakernel.cube.sql.Keys;
import io.datakernel.cube.sql.tables.records.AggregationStructureRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.6.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AggregationStructure extends TableImpl<AggregationStructureRecord> {

	private static final long serialVersionUID = 1168164951;

	/**
	 * The reference instance of <code>aggregation_structure</code>
	 */
	public static final AggregationStructure AGGREGATION_STRUCTURE = new AggregationStructure();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AggregationStructureRecord> getRecordType() {
		return AggregationStructureRecord.class;
	}

	/**
	 * The column <code>aggregation_structure.id</code>.
	 */
	public final TableField<AggregationStructureRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>aggregation_structure.dimensions</code>.
	 */
	public final TableField<AggregationStructureRecord, String> DIMENSIONS = createField("dimensions", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>aggregation_structure.metrics</code>.
	 */
	public final TableField<AggregationStructureRecord, String> METRICS = createField("metrics", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>aggregation_structure</code> table reference
	 */
	public AggregationStructure() {
		this("aggregation_structure", null);
	}

	/**
	 * Create an aliased <code>aggregation_structure</code> table reference
	 */
	public AggregationStructure(String alias) {
		this(alias, AGGREGATION_STRUCTURE);
	}

	private AggregationStructure(String alias, Table<AggregationStructureRecord> aliased) {
		this(alias, aliased, null);
	}

	private AggregationStructure(String alias, Table<AggregationStructureRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AggregationStructureRecord> getPrimaryKey() {
		return Keys.KEY_AGGREGATION_STRUCTURE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AggregationStructureRecord>> getKeys() {
		return Arrays.<UniqueKey<AggregationStructureRecord>>asList(Keys.KEY_AGGREGATION_STRUCTURE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationStructure as(String alias) {
		return new AggregationStructure(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AggregationStructure rename(String name) {
		return new AggregationStructure(name, null);
	}
}
