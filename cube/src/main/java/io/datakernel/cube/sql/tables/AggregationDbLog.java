/*
 * Copyright (C) 2015 SoftIndex LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This class is generated by jOOQ
 */
package io.datakernel.cube.sql.tables;


import io.datakernel.cube.sql.DefaultSchema;
import io.datakernel.cube.sql.tables.records.AggregationDbLogRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggregationDbLog extends TableImpl<AggregationDbLogRecord> {

	private static final long serialVersionUID = 1117864976;

	/**
	 * The reference instance of <code>aggregation_db_log</code>
	 */
	public static final AggregationDbLog AGGREGATION_DB_LOG = new AggregationDbLog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AggregationDbLogRecord> getRecordType() {
		return AggregationDbLogRecord.class;
	}

	/**
	 * The column <code>aggregation_db_log.log</code>.
	 */
	public final TableField<AggregationDbLogRecord, String> LOG = createField("log", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>aggregation_db_log.partition</code>.
	 */
	public final TableField<AggregationDbLogRecord, String> PARTITION = createField("partition", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>aggregation_db_log.file</code>.
	 */
	public final TableField<AggregationDbLogRecord, String> FILE = createField("file", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>aggregation_db_log.file_index</code>.
	 */
	public final TableField<AggregationDbLogRecord, Integer> FILE_INDEX = createField("file_index", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>aggregation_db_log.position</code>.
	 */
	public final TableField<AggregationDbLogRecord, Long> POSITION = createField("position", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>aggregation_db_log</code> table reference
	 */
	public AggregationDbLog() {
		this("aggregation_db_log", null);
	}

	/**
	 * Create an aliased <code>aggregation_db_log</code> table reference
	 */
	public AggregationDbLog(String alias) {
		this(alias, AGGREGATION_DB_LOG);
	}

	private AggregationDbLog(String alias, Table<AggregationDbLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private AggregationDbLog(String alias, Table<AggregationDbLogRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationDbLog as(String alias) {
		return new AggregationDbLog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AggregationDbLog rename(String name) {
		return new AggregationDbLog(name, null);
	}
}
