/*
 * Copyright (C) 2015 SoftIndex LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This class is generated by jOOQ
 */
package io.datakernel.cube.sql.tables.records;

import io.datakernel.cube.sql.tables.AggregationChunk;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.6.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AggregationChunkRecord extends UpdatableRecordImpl<AggregationChunkRecord> implements Record12<Long, Timestamp, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String> {

	private static final long serialVersionUID = 1979486061;

	/**
	 * Setter for <code>aggregation_chunk.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>aggregation_chunk.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>aggregation_chunk.aggregation_id</code>.
	 */
	public void setAggregationId(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.aggregation_id</code>.
	 */
	public String getAggregationId() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>aggregation_chunk.revision_id</code>.
	 */
	public void setRevisionId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.revision_id</code>.
	 */
	public Integer getRevisionId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>aggregation_chunk.min_revision_id</code>.
	 */
	public void setMinRevisionId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.min_revision_id</code>.
	 */
	public Integer getMinRevisionId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>aggregation_chunk.max_revision_id</code>.
	 */
	public void setMaxRevisionId(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.max_revision_id</code>.
	 */
	public Integer getMaxRevisionId() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>aggregation_chunk.count</code>.
	 */
	public void setCount(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.count</code>.
	 */
	public Integer getCount() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>aggregation_chunk.consolidated_revision_id</code>.
	 */
	public void setConsolidatedRevisionId(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.consolidated_revision_id</code>.
	 */
	public Integer getConsolidatedRevisionId() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>aggregation_chunk.consolidation_started</code>.
	 */
	public void setConsolidationStarted(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.consolidation_started</code>.
	 */
	public Timestamp getConsolidationStarted() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>aggregation_chunk.consolidation_completed</code>.
	 */
	public void setConsolidationCompleted(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.consolidation_completed</code>.
	 */
	public Timestamp getConsolidationCompleted() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>aggregation_chunk.dimensions</code>.
	 */
	public void setDimensions(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.dimensions</code>.
	 */
	public String getDimensions() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>aggregation_chunk.metrics</code>.
	 */
	public void setMetrics(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>aggregation_chunk.metrics</code>.
	 */
	public String getMetrics() {
		return (String) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Long, Timestamp, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Long, Timestamp, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return AggregationChunk.AGGREGATION_CHUNK.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return AggregationChunk.AGGREGATION_CHUNK.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AggregationChunk.AGGREGATION_CHUNK.AGGREGATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return AggregationChunk.AGGREGATION_CHUNK.REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return AggregationChunk.AGGREGATION_CHUNK.MIN_REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return AggregationChunk.AGGREGATION_CHUNK.MAX_REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return AggregationChunk.AGGREGATION_CHUNK.COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return AggregationChunk.AGGREGATION_CHUNK.CONSOLIDATED_REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return AggregationChunk.AGGREGATION_CHUNK.CONSOLIDATION_STARTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return AggregationChunk.AGGREGATION_CHUNK.CONSOLIDATION_COMPLETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return AggregationChunk.AGGREGATION_CHUNK.DIMENSIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return AggregationChunk.AGGREGATION_CHUNK.METRICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAggregationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getMinRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getMaxRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getConsolidatedRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getConsolidationStarted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getConsolidationCompleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getDimensions();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getMetrics();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value2(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value3(String value) {
		setAggregationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value4(Integer value) {
		setRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value5(Integer value) {
		setMinRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value6(Integer value) {
		setMaxRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value7(Integer value) {
		setCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value8(Integer value) {
		setConsolidatedRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value9(Timestamp value) {
		setConsolidationStarted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value10(Timestamp value) {
		setConsolidationCompleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value11(String value) {
		setDimensions(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord value12(String value) {
		setMetrics(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationChunkRecord values(Long value1, Timestamp value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Timestamp value9, Timestamp value10, String value11, String value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AggregationChunkRecord
	 */
	public AggregationChunkRecord() {
		super(AggregationChunk.AGGREGATION_CHUNK);
	}

	/**
	 * Create a detached, initialised AggregationChunkRecord
	 */
	public AggregationChunkRecord(Long id, Timestamp created, String aggregationId, Integer revisionId, Integer minRevisionId, Integer maxRevisionId, Integer count, Integer consolidatedRevisionId, Timestamp consolidationStarted, Timestamp consolidationCompleted, String dimensions, String metrics) {
		super(AggregationChunk.AGGREGATION_CHUNK);

		setValue(0, id);
		setValue(1, created);
		setValue(2, aggregationId);
		setValue(3, revisionId);
		setValue(4, minRevisionId);
		setValue(5, maxRevisionId);
		setValue(6, count);
		setValue(7, consolidatedRevisionId);
		setValue(8, consolidationStarted);
		setValue(9, consolidationCompleted);
		setValue(10, dimensions);
		setValue(11, metrics);
	}
}
