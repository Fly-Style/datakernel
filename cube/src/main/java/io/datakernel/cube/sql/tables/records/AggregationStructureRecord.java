/*
 * Copyright (C) 2015 SoftIndex LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This class is generated by jOOQ
 */
package io.datakernel.cube.sql.tables.records;

import io.datakernel.cube.sql.tables.AggregationStructure;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.6.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AggregationStructureRecord extends UpdatableRecordImpl<AggregationStructureRecord> implements Record3<String, String, String> {

	private static final long serialVersionUID = -1355336467;

	/**
	 * Setter for <code>aggregation_structure.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>aggregation_structure.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>aggregation_structure.dimensions</code>.
	 */
	public void setDimensions(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>aggregation_structure.dimensions</code>.
	 */
	public String getDimensions() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>aggregation_structure.metrics</code>.
	 */
	public void setMetrics(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>aggregation_structure.metrics</code>.
	 */
	public String getMetrics() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return AggregationStructure.AGGREGATION_STRUCTURE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AggregationStructure.AGGREGATION_STRUCTURE.DIMENSIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AggregationStructure.AGGREGATION_STRUCTURE.METRICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDimensions();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getMetrics();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationStructureRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationStructureRecord value2(String value) {
		setDimensions(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationStructureRecord value3(String value) {
		setMetrics(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregationStructureRecord values(String value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AggregationStructureRecord
	 */
	public AggregationStructureRecord() {
		super(AggregationStructure.AGGREGATION_STRUCTURE);
	}

	/**
	 * Create a detached, initialised AggregationStructureRecord
	 */
	public AggregationStructureRecord(String id, String dimensions, String metrics) {
		super(AggregationStructure.AGGREGATION_STRUCTURE);

		setValue(0, id);
		setValue(1, dimensions);
		setValue(2, metrics);
	}
}
